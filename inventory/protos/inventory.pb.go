// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inventory.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	protos "github.com/michaelhenkel/dmng/devicemanager/protos"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Device struct {
	Name                 string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Interfaces           []*protos.Interface `protobuf:"bytes,2,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	Role                 *Role               `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_7173caedb7c6ae96, []int{0}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Device) GetInterfaces() []*protos.Interface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

func (m *Device) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type Role struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_7173caedb7c6ae96, []int{1}
}

func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Result struct {
	Received             bool     `protobuf:"varint,1,opt,name=received,proto3" json:"received,omitempty"`
	Applied              bool     `protobuf:"varint,2,opt,name=applied,proto3" json:"applied,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_7173caedb7c6ae96, []int{2}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetReceived() bool {
	if m != nil {
		return m.Received
	}
	return false
}

func (m *Result) GetApplied() bool {
	if m != nil {
		return m.Applied
	}
	return false
}

func (m *Result) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Filter struct {
	Role                 *Role    `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_7173caedb7c6ae96, []int{3}
}

func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func init() {
	proto.RegisterType((*Device)(nil), "inventory.Device")
	proto.RegisterType((*Role)(nil), "inventory.Role")
	proto.RegisterType((*Result)(nil), "inventory.Result")
	proto.RegisterType((*Filter)(nil), "inventory.Filter")
}

func init() { proto.RegisterFile("inventory.proto", fileDescriptor_7173caedb7c6ae96) }

var fileDescriptor_7173caedb7c6ae96 = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xbd, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x49, 0x5b, 0x85, 0xe6, 0x3a, 0x14, 0x3c, 0x45, 0x99, 0xaa, 0xb0, 0x94, 0x81, 0xa4,
	0x6a, 0x07, 0x98, 0x11, 0x02, 0x55, 0x62, 0x40, 0x1e, 0x59, 0x90, 0x9b, 0x1c, 0xa9, 0x85, 0x3f,
	0x2a, 0xdb, 0xad, 0x54, 0xf1, 0xcf, 0xa3, 0x3a, 0x1f, 0xb4, 0xa2, 0x62, 0xf2, 0xdd, 0xef, 0xde,
	0xf3, 0x3d, 0xd9, 0x30, 0xe6, 0x6a, 0x87, 0xca, 0x69, 0xb3, 0xcf, 0x36, 0x46, 0x3b, 0x4d, 0xa2,
	0x0e, 0x24, 0xb7, 0x25, 0xee, 0x78, 0x81, 0x92, 0x29, 0x56, 0xa1, 0xc9, 0xfd, 0xdc, 0xe6, 0x35,
	0xfc, 0x68, 0x68, 0xed, 0x4a, 0xbf, 0x21, 0x7c, 0xf2, 0x9c, 0x10, 0x18, 0x28, 0x26, 0x31, 0x0e,
	0x26, 0xc1, 0x34, 0xa2, 0xbe, 0x26, 0x0f, 0x00, 0x5c, 0x39, 0x34, 0x9f, 0xac, 0x40, 0x1b, 0xf7,
	0x26, 0xfd, 0xe9, 0x68, 0x1e, 0x67, 0x27, 0xb7, 0x67, 0xcb, 0x56, 0x40, 0x8f, 0xb4, 0xe4, 0x06,
	0x06, 0x46, 0x0b, 0x8c, 0xfb, 0x93, 0x60, 0x3a, 0x9a, 0x8f, 0xb3, 0xdf, 0xb4, 0x54, 0x0b, 0xa4,
	0x7e, 0x98, 0x26, 0x30, 0x38, 0x74, 0xe7, 0x56, 0xa7, 0x6f, 0x10, 0x52, 0xb4, 0x5b, 0xe1, 0x48,
	0x02, 0x43, 0x83, 0x05, 0xf2, 0x1d, 0x96, 0x5e, 0x31, 0xa4, 0x5d, 0x4f, 0x62, 0xb8, 0x64, 0x9b,
	0x8d, 0xe0, 0x58, 0xc6, 0x3d, 0x3f, 0x6a, 0x5b, 0x72, 0x05, 0x7d, 0x69, 0x2b, 0xbf, 0x3f, 0xa2,
	0x87, 0x32, 0xbd, 0x83, 0xf0, 0x99, 0x0b, 0x87, 0xa6, 0x0b, 0x17, 0xfc, 0x13, 0x6e, 0xbe, 0x87,
	0x68, 0xd9, 0x72, 0xb2, 0x80, 0xe8, 0x05, 0x5d, 0xf3, 0x52, 0xd7, 0x47, 0x86, 0x1a, 0x25, 0x7f,
	0x51, 0x7a, 0x41, 0xee, 0x61, 0xf4, 0xca, 0x6d, 0xe3, 0xb2, 0x27, 0xb6, 0x3a, 0xc8, 0x59, 0xdb,
	0x2c, 0x78, 0x9c, 0xbd, 0x67, 0x15, 0x77, 0xeb, 0xed, 0x2a, 0x2b, 0xb4, 0xcc, 0x25, 0x2f, 0xd6,
	0x0c, 0xc5, 0x1a, 0xd5, 0x17, 0x8a, 0xbc, 0x94, 0xaa, 0xca, 0x3b, 0x57, 0xf3, 0xb7, 0xab, 0xd0,
	0x9f, 0x8b, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9d, 0xbc, 0x59, 0x79, 0x16, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InventoryClient is the client API for Inventory service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InventoryClient interface {
	GetDevice(ctx context.Context, in *Device, opts ...grpc.CallOption) (*Device, error)
	ListDevices(ctx context.Context, in *Filter, opts ...grpc.CallOption) (Inventory_ListDevicesClient, error)
}

type inventoryClient struct {
	cc *grpc.ClientConn
}

func NewInventoryClient(cc *grpc.ClientConn) InventoryClient {
	return &inventoryClient{cc}
}

func (c *inventoryClient) GetDevice(ctx context.Context, in *Device, opts ...grpc.CallOption) (*Device, error) {
	out := new(Device)
	err := c.cc.Invoke(ctx, "/inventory.Inventory/GetDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inventoryClient) ListDevices(ctx context.Context, in *Filter, opts ...grpc.CallOption) (Inventory_ListDevicesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Inventory_serviceDesc.Streams[0], "/inventory.Inventory/ListDevices", opts...)
	if err != nil {
		return nil, err
	}
	x := &inventoryListDevicesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Inventory_ListDevicesClient interface {
	Recv() (*Device, error)
	grpc.ClientStream
}

type inventoryListDevicesClient struct {
	grpc.ClientStream
}

func (x *inventoryListDevicesClient) Recv() (*Device, error) {
	m := new(Device)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// InventoryServer is the server API for Inventory service.
type InventoryServer interface {
	GetDevice(context.Context, *Device) (*Device, error)
	ListDevices(*Filter, Inventory_ListDevicesServer) error
}

// UnimplementedInventoryServer can be embedded to have forward compatible implementations.
type UnimplementedInventoryServer struct {
}

func (*UnimplementedInventoryServer) GetDevice(ctx context.Context, req *Device) (*Device, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDevice not implemented")
}
func (*UnimplementedInventoryServer) ListDevices(req *Filter, srv Inventory_ListDevicesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListDevices not implemented")
}

func RegisterInventoryServer(s *grpc.Server, srv InventoryServer) {
	s.RegisterService(&_Inventory_serviceDesc, srv)
}

func _Inventory_GetDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Device)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InventoryServer).GetDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Inventory/GetDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InventoryServer).GetDevice(ctx, req.(*Device))
	}
	return interceptor(ctx, in, info, handler)
}

func _Inventory_ListDevices_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Filter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(InventoryServer).ListDevices(m, &inventoryListDevicesServer{stream})
}

type Inventory_ListDevicesServer interface {
	Send(*Device) error
	grpc.ServerStream
}

type inventoryListDevicesServer struct {
	grpc.ServerStream
}

func (x *inventoryListDevicesServer) Send(m *Device) error {
	return x.ServerStream.SendMsg(m)
}

var _Inventory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inventory.Inventory",
	HandlerType: (*InventoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDevice",
			Handler:    _Inventory_GetDevice_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListDevices",
			Handler:       _Inventory_ListDevices_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "inventory.proto",
}
